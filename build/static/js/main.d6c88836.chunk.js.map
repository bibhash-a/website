{"version":3,"sources":["index.js"],"names":["SetResult","found","name","capital","population","languages","map","language","concat","alpha3Code","width","src","flag","alt","Button","country","setResult","type","onClick","App","useState","countries","setCountries","searchedCountry","setSearch","result","useEffect","axios","get","then","response","data","placeholder","value","onChange","e","target","search","toLowerCase","possibleResults","filter","includes","length","ReactDOM","render","document","getElementById"],"mappings":"qKAKMA,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAElB,OACF,qCACQ,6BAAKA,EAAMC,OACX,0CAAaD,EAAME,WACnB,6CAAgBF,EAAMG,cACtB,2CACA,6BACGH,EAAMI,UAAUC,KAAI,SAAAC,GAAQ,OAAI,mCAAqDA,EAASL,OAAnDK,EAASL,KAAKM,OAAOP,EAAMQ,kBAEzE,qBAAKC,MAAS,IAAKC,IAAOV,EAAMW,KAAMC,IAAO,WAAaZ,EAAMC,WAKlEY,EAAS,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACxB,OAAQ,qCACP,IACD,wBAAQC,KAAO,SAASC,QAAW,kBACjCF,EAAU,cAAChB,EAAD,CAAWC,MAASc,MADhC,sBAQII,EAAM,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,OAEqBF,mBAAS,IAF9B,mBAETG,EAFS,KAEQC,EAFR,OAGYJ,mBAAS,CAAC,KAHtB,mBAGTK,EAHS,KAGDT,EAHC,KAMhBU,qBAAW,WACXC,IACGC,IAAI,wCACJC,MAAM,SAAAC,GAAQ,OAAIR,EAAaQ,EAASC,WACxC,IAgCH,OACA,gCACE,gDACA,uBAAOC,YAAc,MAAMC,MAASV,EAAiBW,SAjC3B,SAACC,GAC3BX,EAAUW,EAAEC,OAAOH,OACnB,IAAMI,EAASF,EAAEC,OAAOH,MAAMK,cAExBC,EAAkBlB,EACvBmB,QAAO,SAAAzB,GAAO,OAAIA,EAAQb,KAAKoC,cAAcG,SAASJ,EAAOC,kBAE9D,GAAGC,EAAgBG,SAAWrB,EAAUqB,OACtC1B,EAAU,SACP,GAAGuB,EAAgBG,OAAS,GAC/B1B,EAAU,CAAC,+CACR,GAA8B,IAA3BuB,EAAgBG,OAAc,CACpC,IAAMzC,EAAQsC,EAAgB,GAC9BvB,EACE,cAAChB,EAAD,CAAWC,MAASA,UAGW,IAA3BsC,EAAgBG,OACtB1B,EAAU,CAAC,8BAEXA,EAAUuB,EAAgBjC,KAAI,SAAAS,GAC9B,OACA,8BACEA,EAAQb,KACV,cAACY,EAAD,CAAQC,QAAWA,EAASC,UAAaA,MAF/BD,EAAQb,aAYpB,8BACGuB,QAOPkB,IAASC,OAAO,cAACzB,EAAD,IAAQ0B,SAASC,eAAe,W","file":"static/js/main.d6c88836.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from \"axios\"\n\n\nconst SetResult = ({found}) => {\n\n  return(\n<>\n        <h1>{found.name}</h1>\n        <p>capital: {found.capital}</p>\n        <p>population: {found.population}</p>\n        <h2>languages</h2>\n        <ul>\n          {found.languages.map(language => <li key = {language.name.concat(found.alpha3Code)}> {language.name}</li>)}\n        </ul>\n        <img width = {200} src = {found.flag} alt = {\"Flag of \" + found.name}/>\n        </>\n  )\n}\n\nconst Button = ({country, setResult}) => {\n  return (<>\n  {\" \"}\n  <button type = \"button\" onClick = {() =>\n    setResult(<SetResult found = {country}/>)}>\n    show\n    </button>\n  </>\n  )\n}\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [searchedCountry, setSearch] = useState(\"\")\n  const [result, setResult] = useState([\"\"])\n\n\n  useEffect( () => {\n  axios\n    .get(\"https://restcountries.eu/rest/v2/all\")\n    .then( response => setCountries(response.data) )\n  }, [])\n\n  const handleCountrySearch = (e) => {\n    setSearch(e.target.value)\n    const search = e.target.value.toLowerCase()\n   \n    const possibleResults = countries\n    .filter(country => country.name.toLowerCase().includes(search.toLowerCase()))\n    \n    if(possibleResults.length === countries.length)\n      setResult(\"\")\n    else if(possibleResults.length > 10)\n      setResult([\"Too many matches, narrow your search.\"])\n    else if(possibleResults.length === 1) {\n      const found = possibleResults[0]\n      setResult(\n        <SetResult found = {found}/>\n        )\n    }\n    else if(possibleResults.length === 0)\n      setResult([\"Could not find a country.\"])\n    else \n      setResult(possibleResults.map(country => {\n      return(\n      <p key = {country.name}>\n       {country.name}\n      <Button country = {country} setResult = {setResult}/>\n      </p>\n      )\n    }\n  ))\n  }\n  return (\n  <div>\n    <h1>find countries</h1>\n    <input placeholder = \"...\" value = {searchedCountry} onChange = {handleCountrySearch}/>\n    <div>\n      {result}\n   \n    </div>\n  </div>\n  )\n  }\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}